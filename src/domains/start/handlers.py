"""
–ú–æ–¥—É–ª—å `handlers.py` —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–æ–º–∞–Ω–¥–æ–π `/start`.

–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
- –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞;
- —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π;
- –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º –º–µ–Ω—é.
"""

from aiogram import F, Router, types
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from dishka import FromDishka
from dishka.integrations.aiogram import inject

from src.domains.start.keyboards import kb_start_msg
from src.domains.users.services import UserService

start_router = Router(name="start_router")


@start_router.message(Command("start"))
@inject
async def start_command(
    message: types.Message,
    user_service: FromDishka[UserService],
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.
    """
    await get_started_message(message)
    await user_service.register_user(
        message,
    )


@start_router.callback_query(F.data == "break_processing")
async def break_processing(
    callback_query: CallbackQuery,
    state: FSMContext,
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    """
    await get_started_message(callback_query.message)

    await callback_query.answer()


async def get_started_message(message: Message) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ.
    """
    start_msg = """
üéµ –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º—É–∑—ã–∫—É –¥–ª—è —Ç–≤–æ–µ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è.

–ß—Ç–æ —É–º–µ—é:
üîé –ù–∞–π–¥—É —Ç—Ä–µ–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é (3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–∞ –≤—ã–±–æ—Ä)
üìº –û–±—Ä–∞–±–æ—Ç–∞—é —Å—Å—ã–ª–∫—É —Å YouTube –∏ –¥–æ–±–∞–≤–ª—é —Å–∏–≥–Ω–∞–ª —Å—Ç–∞—Ä—Ç–∞
‚úÇÔ∏è –û–±—Ä–µ–∂—É —Ç—Ä–µ–∫ –¥–æ –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω—é –≤ .mp3
üìÇ –ü–æ–∫–∞–∂—É —Å–ø–∏—Å–æ–∫ —É–∂–µ –≥–æ—Ç–æ–≤—ã—Ö —Ç—Ä–µ–∫–æ–≤

–ü—Ä–∏—à–ª–∏ –º–Ω–µ:
‚Ä¢ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube
‚Ä¢ —Ç—Ä–µ–∫ —Ñ–∞–π–ª–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ .mp3

–ò —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –º—É–∑—ã–∫—É ‚ú®
"""
    try:
        await message.edit_text(
            start_msg,
            reply_markup=await kb_start_msg(),
        )
    except TelegramBadRequest:
        await message.answer(
            start_msg,
            reply_markup=await kb_start_msg(),
        )
