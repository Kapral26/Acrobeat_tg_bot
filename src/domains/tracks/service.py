"""
–ú–æ–¥—É–ª—å `service.py` —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–µ–∫–∞–º–∏.

–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
- –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–∫–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤;
- –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ (–≤—ã—Ä–µ–∑–∫–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤);
- –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
"""

import logging
from dataclasses import dataclass
from pathlib import Path

import aiofiles
from aiogram import Bot, types
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, Message

from src.domains.tracks.keyboards import (
    cliper_result_kb,
    get_search_after_error_kb,
    set_clip_period,
)
from src.domains.tracks.schemas import DownloadTrackParams
from src.domains.tracks.track_cliper.message_cleanup import TrackClipMsgCleanerService
from src.domains.tracks.track_cliper.schemas import ClipPeriodSchema
from src.domains.tracks.track_cliper.service import TrackCliperService
from src.service.downloader.service import DownloaderService

logger = logging.getLogger(__name__)


@dataclass
class TrackService:
    """
    –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–µ–∫–∞–º–∏.

    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.
    """

    downloader_service: DownloaderService
    track_cliper_service: TrackCliperService
    cleaner_service: TrackClipMsgCleanerService

    @staticmethod
    async def __send_track(
        path: Path,
        bot: Bot,
        chat_id: int,
        file_name: str,
        message_text: str,
        keyboard: InlineKeyboardMarkup,
    ) -> Message:
        """
        –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

        :param path: –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
        :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram.
        :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.
        :param file_name: –ò–º—è —Ñ–∞–π–ª–∞.
        :param message_text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
        :param keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
        :return: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        """
        async with aiofiles.open(path, "rb") as f:
            file_content = await f.read()
            send_message = await bot.send_document(
                chat_id=chat_id,
                document=types.input_file.BufferedInputFile(
                    file_content, filename=f"{file_name}.mp3"
                ),
                caption=message_text,
                reply_markup=keyboard,
            )
            return send_message

    async def download_full_track(
        self,
        message: Message,
        bot: Bot,
        download_params: DownloadTrackParams,
    ) -> Path | None:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ç—Ä–µ–∫ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram.
        :param download_params: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–∫–∞.
        """
        chat_id = message.chat.id
        try:
            track_path = await self.downloader_service.download_track(
                download_params=download_params, bot=bot, chat_id=chat_id
            )
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞: {e}")  # noqa: TRY401
            await message.answer(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∏—Å–∫–æ–º",
                reply_markup=await get_search_after_error_kb(),
            )
            return None

        keyboard = await set_clip_period()
        await self.__send_track(
            path=track_path,
            bot=bot,
            chat_id=chat_id,
            file_name="example",
            message_text="üéµ –¢—Ä–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω.\n–ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ –∏ —É–∫–∞–∂–∏—Ç–µ, —Å –∫–∞–∫–æ–≥–æ "
            "–º–æ–º–µ–Ω—Ç–∞ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å –æ–±—Ä–µ–∑–∫—É",
            keyboard=keyboard,
        )

        return track_path

    async def download_clipped_track(
        self,
        track_path: Path,
        track_name: str,
        bot: Bot,
        chat_id: int,
        state: FSMContext,
        user_id: int,
    ) -> None:
        """
        –í—ã—Ä–µ–∑–∞–µ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

        :param track_path: –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∞—É–¥–∏–æ—Ñ–∞–π–ª—É.
        :param track_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞.
        :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram.
        :param chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.
        :param state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
        :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        state_data = await state.get_data()

        clip_period = ClipPeriodSchema(
            start=state_data["period_start"],
            finish=state_data["period_end"],
        )
        cliper_track_path = await self.track_cliper_service.clip_track(
            track_path=track_path, bot=bot, chat_id=chat_id, clip_period=clip_period
        )

        keyboard = await cliper_result_kb()
        message_text = """
        üéß –ì–æ—Ç–æ–≤–æ! –í–æ—Ç –≤–∞—à —Ç—Ä–µ–∫.\n–ù–µ —É—Å—Ç—Ä–æ–∏–ª–æ? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ üëá
        """
        send_track_message = await self.__send_track(
            path=cliper_track_path,
            bot=bot,
            chat_id=chat_id,
            file_name=track_name,
            message_text=message_text,
            keyboard=keyboard,
        )
        logger.debug(
            f"Collect mgs_id: {send_track_message.message_id} download_clipped_track"
        )
        await self.cleaner_service.collect_cliper_messages_to_delete(
            message_id=send_track_message.message_id, user_id=user_id
        )
