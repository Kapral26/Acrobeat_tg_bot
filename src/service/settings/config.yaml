logging:
  level: INFO
  format: "%(asctime)s | %(levelname)-8s | %(pathname)s | %(funcName)s:%(lineno)d | %(message)s"
  handlers:
    console:
      class: logging.StreamHandler
      level: INFO
      stream: ext://sys.stdout
    file_app:
      class: logging.FileHandler
      filename: logs/backend.log
      level: INFO
    file_private:
      class: logging.FileHandler
      filename: logs/private.log
      level: INFO
    file_uvicorn_access:
      class: logging.FileHandler
      filename: logs/uvicorn_access.log
      level: INFO
    file_sqlalchemy:
      class: logging.FileHandler
      filename: logs/sqlalchemy.log
      level: INFO
    file_taskiq:
      class: logging.FileHandler
      filename: logs/taskiq.log
      level: INFO

  loggers:
    root:
      handlers: [ console, file_app ]
      level: INFO
      propagate: false

    uvicorn.error:
      handlers: [ console, file_app ]
      level: INFO
      propagate: false

    uvicorn.access:
      handlers: [ console, file_uvicorn_access ]
      level: INFO
      propagate: false

    fastapi:
      handlers: [ console, file_app ]
      level: INFO
      propagate: false

    sqlalchemy:
      handlers: [ console, file_sqlalchemy ]
      level: INFO
      propagate: false

    taskiq:
      handlers: [ console, file_taskiq ]
      level: INFO
      propagate: false

    taskiq.aio_pika_broker:
      handlers: [ console, file_taskiq ]
      level: INFO
      propagate: false

    aio_pika:
      level: INFO
      handlers: [ file_taskiq ]
      propagate: False

    aiormq:
      level: INFO
      handlers: [ file_taskiq ]
      propagate: False

    pamqp:
      level: INFO
      handlers: [ file_taskiq ]
      propagate: False

    httpcore:
      handlers: [ file_private ]
      level: WARNING
      propagate: false

    httpx:
      handlers: [ file_private ]
      level: WARNING
      propagate: false
