name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üîê Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üì¶ Copy files to VPS
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{ secrets.DEPLOY_DIR }}/${{ github.event.repository.name }}

      - name: üìù Generate .env file on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cat <<EOT > ${{ secrets.DEPLOY_DIR }}/${{ github.event.repository.name }}/.env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=5432
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=6379
          REDIS_DB=0
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          DEBUG=${{ secrets.DEBUG }}
          EOT
          EOF

      - name: üöÄ Start containers
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_DIR }}/${{ github.event.repository.name }}
          docker compose down
          docker compose up -d --build
          EOF



  lint:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: üîê Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: üßπ Run Ruff linter on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_DIR }}/${{ github.event.repository.name }}
          docker compose exec bot uv run ruff check --config ./pyproject.toml --fix
          EOF

  run:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: üîê Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: üöÄ Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd ${{ secrets.DEPLOY_DIR }}/${{ github.event.repository.name }}
          docker compose pull
          docker compose down
          docker compose up -d --build
          EOF
