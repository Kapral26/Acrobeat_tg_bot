[project]
name = "acrobeat-tg-bot"
version = "0.1.0"
description = "Асинхронный Telegram-бот для работы с музыкой, пользователями и треками. Использует PostgreSQL, Redis, Alembic, DI (dishka), uv и Docker."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiobotocore>=2.24.1",
    "aiofiles>=24.1.0",
    "aiogram>=3.21.0",
    "alembic>=1.16.4",
    "asyncpg>=0.30.0",
    "bs4>=0.0.2",
    "dishka>=1.6.0",
    "f>=0.0.1",
    "ffmpeg-python>=0.2.0",
    "greenlet>=3.2.4",
    "httpx>=0.28.1",
    "load-dotenv>=0.1.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pydub>=0.25.1",
    "pytest>=8.4.1",
    "pyyml>=0.0.2",
    "redis>=6.4.0",
    "ruff==0.12.11",
    "sqlalchemy>=2.0.43",
    "typing-extensions==4.15.0",
    "yt-dlp>=2025.8.11",
]


[tool.ruff]
# Выбранные категории проверок
lint.select = [
    "W", # Warnings
    "B", # Best practices
    "Q", # Quotes
    "N", # Names
    "D", # Docstrings
    "UP", # Unused private names
    "S", # Security
    "T20", # Typing (general)
    "RUF", # Ruff-specific rules
    "FLY", # Flynt-related rules
    "TRY", # Try/except patterns
    "PD", # Python development best practices
    "TCH", # Type checking
    "ANN", # Type annotations
]

extend-select = ["ALL"]
extend-ignore = [
    # Документирование и форматирование docstring
    "D107", # Missing docstring in public module
    "D203", # One blank line required before class docstring
    "D212", # Multi-line docstring summary should start at first line
    "D205", # 2 blank lines required after last section of a docstring
    "D400", # First line should end with a period
    "D415", # First line missing period

    # Стиль кода и аннотации
    "ANN101", # Missing type annotation in function
    "ANN002", # Missing type annotation for parameter
    "ANN003", # Missing type annotation for return
    "ANN204", # Missing type annotation for variable

    # Безопасность и другие категории
    "S608", # Possible hardcoded password
    "E722", # Do not use bare 'except'
    "F401", # Module imported but not used
    "S101", # No assert in test

    # Ruff специфичные правила
    "RUF001", # Line too long
    "RUF002", # Too many arguments
    "RUF003", # Too many locals

    # Try/except
    "TRY003", # Bare except clause catches SystemExit

    # Общие
    "B904", # Yield after return
    "TCH003", # Incorrect typing import
]

# Правила, которые можно автоматически исправлять
fixable = ["ALL"]

# Исключить директории из проверки
exclude = [
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    ".git",
    ".idea",
    "pgdata",
    "logs",
]

# Максимальная длина строки
line-length = 120

# Целевая версия Python
target-version = "py312"

# Правила, которые не подлежат автоматической фиксации
unfixable = []

# Форматирование
[tool.ruff.format]
# Включить переформатирование кода в docstring
docstring-code-format = true
# Стиль кавычек
quote-style = "double"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --tb=short --strict-markers"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: пометка для медленных тестов",
    "integration: интеграционные тесты",
    "asyncio: асинхронные тесты",
]
