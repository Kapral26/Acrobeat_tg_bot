[project]
name = "acrobeat-tg-bot"
dynamic = ["version"]
description = "Асинхронный Telegram-бот для работы с музыкой, пользователями и треками. Использует PostgreSQL, Redis, Alembic, DI (dishka), uv и Docker."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiobotocore>=2.24.1",
    "aiofiles>=24.1.0",
    "aiogram>=3.21.0",
    "alembic>=1.16.4",
    "asyncpg>=0.30.0",
    "bs4>=0.0.2",
    "dishka>=1.6.0",
    "f>=0.0.1",
    "ffmpeg-python>=0.2.0",
    "greenlet>=3.2.4",
    "httpx>=0.28.1",
    "load-dotenv>=0.1.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pydub>=0.25.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pyyml>=0.0.2",
    "redis>=6.4.0",
    "ruff==0.12.11",
    "sqlalchemy>=2.0.43",
    "typing-extensions==4.15.0",
    "yt-dlp>=2025.8.11",
]

[tool.semantic_release]
# Откуда брать текущую версию
version_toml = "pyproject.toml:tool.semantic_release.version"
# Парсер коммитов (angular для conventional commits)
commit_parser = "angular"
# Файл для changelog
changelog_file = "CHANGELOG.md"
# Отключаем сборку и публикацию
build_command = "echo 'No build needed'"
upload_to = "none"
# Текущая версия (аналог version из commitizen)
version = "0.0.0"

# Настройка генерации changelog
[tool.semantic_release.changelog]
# Сохраняем историю (incremental)
incremental = true

# Группировка коммитов по типам (аналог change_type_order)
[tool.semantic_release.changelog.sections]
features = ["feat"]
fixes = ["fix"]
refactor = ["refactor"]
chore = ["chore"]
documentation = ["docs"]
style = ["style"]
tests = ["test"]

# Пользовательский шаблон для заголовка версии
[tool.semantic_release.changelog.template]
# Заголовок версии (аналог changelog_title)
version_template = "## {{ version }} ({{ date | strftime('%Y-%m-%d') }})\n"
# Шаблон для коммита (аналог message_template)
commit_template = "- {{ message }}\n{% if body %}  {{ body | indent(2) }}\n{% endif %}"

# Можно настроить отдельные шаблоны для каждой секции
[tool.semantic_release.changelog.template.sections]
features = "### Новые возможности\n"
fixes = "### Исправления\n"
refactor = "### Рефакторинг\n"
chore = "### Служебные изменения\n"
documentation = "### Документация\n"
style = "### Стиль кода\n"
tests = "### Тесты\n"

# Исключаем коммиты, которые не должны попадать в changelog
[tool.semantic_release.changelog.exclude]
commit_types = ["ci", "build"]  # CI и сборку не включаем в changelog

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    ".git",
    ".idea",
    "pgdata",
    "logs",
    "migrations",
]

[tool.ruff.lint]
select = [
    "W", # Warnings
    "B", # Best practices
    "Q", # Quotes
    "N", # Names
    "D", # Docstrings
    "UP", # Unused private names
    "S", # Security
    "T20", # Typing (general)
    "RUF", # Ruff-specific rules
    "FLY", # Flynt-related rules
    "TRY", # Try/except patterns
    "PD", # Python development best practices
    "TCH", # Type checking
    "ANN", # Type annotations
]
extend-select = ["ALL"]
extend-ignore = [
    # Документирование и форматирование docstring
    "D107", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D203", # One blank line required before class docstring
    "D212", # Multi-line docstring summary should start at first line
    "D205", # 2 blank lines required after last section of a docstring
    "D400", # First line should end with a period
    "D415", # First line missing period

    # Стиль кода и аннотации
    "ANN002", # Missing type annotation for parameter
    "ANN003", # Missing type annotation for return
    "ANN204", # Missing type annotation for variable

    # Безопасность и другие категории
    "S608", # Possible hardcoded password
    "E722", # Do not use bare 'except'
    "F401", # Module imported but not used
    "S101", # No assert in test

    # Ruff специфичные правила
    "RUF001", # Line too long
    "RUF002", # Too many arguments
    "RUF003", # Too many locals

    # Try/except
    "TRY003", # Bare except clause catches SystemExit

    # Общие
    "B904", # Yield after return
    "TC003", # Incorrect typing import

    "G004", # Logging statement uses f-string
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"